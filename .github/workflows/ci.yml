name: Build

on:
  push:
    tags:
      - 'v*'
    branches:
      - "main"
  pull_request:
    types:
      - opened
      - synchronize
      - edited

env:
  REGISTRY: quay.io/innovation-hub-bergisches-rheinland

jobs:
  build:
    name: Build Image

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/keycloak
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        if: ${{ github.event_name == 'push' }}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_IO_USERNAME }}
          password: ${{ secrets.QUAY_IO_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.event_name == 'push' }}
          file: Dockerfile
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  upgrade:
    runs-on: ubuntu-latest

    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.user.login == 'dependabot[bot]' }}

    permissions:
      pull-requests: write
      contents: write

    needs: [ "build" ]

    steps:
      - uses: actions/checkout@v3

      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v1.3.6

      - name: Auto merge patch and minor updates
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

      - name: Release new version
        if: ${{ steps.dependabot-metadata.outputs.dependency-names == 'keycloak/keycloak' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        run: |
          gh release create v${{ steps.dependabot-metadata.outputs.new-version }} --notes "${{ steps.dependabot-metadata.outputs.new-version }}"
